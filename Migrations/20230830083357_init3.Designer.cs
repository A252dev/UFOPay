// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace UFOPay.Migrations
{
    [DbContext(typeof(UFODbContext))]
    [Migration("20230830083357_init3")]
    partial class init3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TransferModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("comment")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("currency")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("reciever")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("sender")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("summa")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("UFOPay.Models.AddBalance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("currency")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("summa")
                        .HasColumnType("bigint");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AddBalanceRequest");
                });

            modelBuilder.Entity("UserData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("AgreeWithDocs")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("KeepLoggedIn")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("admin")
                        .HasColumnType("tinyint(1)");

                    b.Property<long>("balance_eur")
                        .HasColumnType("bigint");

                    b.Property<long>("balance_pln")
                        .HasColumnType("bigint");

                    b.Property<long>("balance_rub")
                        .HasColumnType("bigint");

                    b.Property<long>("balance_usd")
                        .HasColumnType("bigint");

                    b.Property<string>("birthday")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("passport")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("registrationData")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("repeatPassword")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("secondName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserData");
                });
#pragma warning restore 612, 618
        }
    }
}
